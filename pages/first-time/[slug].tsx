import type { NextPage } from 'next'
import Head from 'next/head'
import styles from '../../styles/Home.module.css'
import {gql} from 'graphql-tag'
import {useQuery, useMutation} from '@apollo/client'
import { useState } from 'react'
import { useFormik } from 'formik'
import * as Yup from 'yup'

const passwordSchema = Yup.object().shape({
  password: Yup.string().required('Password is required').min(4),
  confirmPassword: Yup.string()
     .oneOf([Yup.ref('password'), null], 'Passwords must match')

})

const CURRENT_USER_QUERY = gql`
query {
  events {
    note
  }
}
`


const SIGNIN_MUTATION = gql`
  mutation SIGNIN_MUTATION($email: String!, $password: String!){
    authenticateUserWithPassword(email: $email, password: $password){
      ...on UserAuthenticationWithPasswordSuccess{
        item {
          email,
          id
        }
      }
    }
  }
`

const Header = ({children}) => (
  <div className={styles.header}>{children}</div>
)


const Home: NextPage = () => {
  const query = useQuery(CURRENT_USER_QUERY)
  const formik = useFormik({
    initialValues:{
      confirmPassword: '',
      password: ''
    },
    onSubmit: values => login(values),
    validationSchema: passwordSchema
  })
   const [user, setUser] = useState()

  const [signin, { data, error, loading}] = useMutation(SIGNIN_MUTATION, {
    variables:{
      password: formik.values.password,
      confirmPassword: formik.values.confirmPassword
    }
  })
  console.log('formik >> ', formik)
  const login = async (values) => {
    
    console.log('values ', values)
    
    try {
      const {data: {authenticateUserWithPassword: {item}}} = await signin()
      if (item) {
        setUser(item)
      }
    } catch (error){
      console.log('error>> ', error)
    }
    
  }
    console.log('user > ', user)
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Header>
        <div className={styles.titleDiv}>
          <h1>Bienvenido(a) al sistema de informaci√≥n de Cumbres 7</h1>
          <h4>Necesitas un password, por favor elige uno...</h4>
        </div>
        <img src={'/images/logo.png'} className={styles.logo} />
      </Header>

      <main className={styles.main}>
            {user && <iframe allowfullscreen height="100vh" width="100%" className={styles.iframe} src="https://docs.google.com/spreadsheets/d/e/2PACX-1vQnhCiDNliaGXEIXO3FFyWgZ0nLFeiaAp77ASDVZjQML8CzZTXsdhdgKyMxUyImmPAoRnirPWQxFY7K/pubhtml?widget=true&amp;headers=true"></iframe>}
        <div>
          <div>
          </div>
          <div>
            {!user && <>
            <h2>Ingresa tu password</h2>
            
                <form method='POST' onSubmit={formik.handleSubmit}>
                  <input name='password' autoComplete='password' onChange={formik.handleChange} value={formik.values?.password} type="password" placeholder='Password' />
                  <span className={styles.error}>{formik.errors.password}</span>
                  <input name='confirmPassword' autoComplete='password' onChange={formik.handleChange} value={formik.values?.confirmPassword} type="password" placeholder='Confirm Password' />
                  <span className={styles.error}>{formik.errors.confirmPassword}</span>
                  <input type="submit" value={loading? 'Loading...' : 'Log in'} />
                </form>
              <p>Una ves  que ingreses tu nuevo password te redireccionaremos al area de inicio...</p>
            </>}
          </div>
        </div>
        
      </main>

      <footer className={styles.footer}>
        <a
          href="https://cyberpolin.com"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by cyberpolin.com
          
        </a>
      </footer>
    </div>
  )
}

export default Home
